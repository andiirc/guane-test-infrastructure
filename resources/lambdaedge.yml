Resources:
  LambdaEdge:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaIAMRole.Arn
      Code:
        ZipFile: |
          'use strict';
            exports.handler = (event, context, callback) => {
             const response = event.Records[0].cf.response;
              const headers = response.headers;
              headers['content-security-policy'] = [{
                key: 'Content-Security-Policy',
                value: "default-src 'self'; style-src 'self' https://fonts.googleapis.com; script-src 'self' 'sha256-0PyXrbuxlQmxEjarWHQyByi0FHnr0JH25+UFN152OVQ='; object-src 'self'; manifest-src 'self'; img-src * 'self' data: https:; connect-src 'self' https://rickandmortyapi.com/api/character; font-src 'self' https://fonts.gstatic.com"
              }];
              headers['x-content-type-options'] = [{
                key: 'X-Content-Type-Options',
                value: 'nosniff'
              }];
              headers['x-frame-options'] = [{
                key: 'X-Frame-Options',
                value: 'SAMEORIGIN'
              }];
              headers['x-permitted-cross-domain-policies'] = [{
                key: 'X-Permitted-Cross-Domain-Policies',
                value: 'master-only'
              }];
              headers['x-xss-protection'] = [{
                key: 'X-XSS-Protection',
                value: '1; mode=block'
              }];
              headers['referrer-policy'] = [{
                key: 'Referrer-Policy',
                value: 'SAME-ORIGIN'
              }];
              headers['strict-transport-security'] = [{
                key: 'Strict-Transport-Security',
                value: 'max-age=63072000; includeSubdomains; preload'
              }];
              callback(null, response);
          };
      Runtime: ${self:provider.runtime}
      MemorySize: 128
      Timeout: 1
    
  LambdaEdgeVersion:
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    Properties:
      FunctionName: !GetAtt LambdaEdge.Arn